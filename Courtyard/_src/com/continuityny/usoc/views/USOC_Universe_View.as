//	Debugimport com.bourre.log.Logger;import com.bourre.log.LogLevel;//	Delegateimport com.bourre.commands.Delegate;//	Event Broadcastingimport com.bourre.events.IEvent;import com.bourre.events.BasicEvent;import com.bourre.events.EventType;import com.continuityny.usoc.USOC_EventList;import com.continuityny.usoc.USOC_EventBroadcaster;import com.bourre.visual.MovieClipHelper;//	list of Viewsimport com.continuityny.usoc.USOC_ViewList;import com.continuityny.usoc.USOC_Site_Model;import com.continuityny.usoc.views.USOC_Location_View;import com.continuityny.usoc.views.USOC_Galaxy_View;import com.robertpenner.easing.*;import mx.transitions.Tween;/** * @author Greg  */class com.continuityny.usoc.views.USOC_Universe_View extends MovieClipHelper {		// public var view : MovieClip; inherrited from MovieClipHelper		private var athletes_data:Array 	= [];	private var athlete_lib_id:String 	= "mc_wire_athlete";	private var LAST_ID : Number;			var hoverModuleX:Number = 483;	var hoverModuleY:Number = 400;		var modSpeedSlow:Number = 0.0;	var modSpeedFast:Number = 0.025;		var modSpeed:Number = modSpeedFast;		var usedDepths:Array = [];	private var _data : Object;	private var MESSAGE_MC : MovieClip;	private var MESSAGE_INT : Number;	private var MESSAGE_OPEN : Boolean;	private var LOCKED : Boolean = true;			public function USOC_Universe_View( mc:MovieClip ) {		super( USOC_ViewList.VIEW_UNIVERSE, mc );			trace("USOC_Universe_View: mc:   eee "+mc);								// initUniverse(uni, 100); // 55 - 200			view._x = 483; 		view._y = 400; 									}				/*	public function populate_0(){				view._visible = false; 				athletes_data = USOC_Site_Model.getData().athlete;  		trace("athletes_data:"+athletes_data[0].network);					for (var i : Number = 0; i < (athletes_data.length); i++) {								trace(athletes_data[i].aid+" - "+athletes_data[i].message); 								var this_mc_name = "athlete_"+i+"_mc";				var d = i*10; 				view.attachMovie(athlete_lib_id, this_mc_name, d);								var this_mc : MovieClip = view["athlete_"+i+"_mc"];								this_mc.bubble_mc._visible = false;								trace("athletes_data[i].network:"+athletes_data[i].network);						var scale : Number = (Number(athletes_data[i].network)+100 ) * 2; 			this_mc.gallaxy_mc._xscale = scale;			this_mc.gallaxy_mc._yscale = scale;						this_mc._xscale = 			this_mc._yscale = 			this_mc._alpha = random(50) + 50; 						if(athletes_data[i].aid == "008"){				this_mc.face_mc._visible = false; 				this_mc.attachMovie("mc_logo", "logo_mc", 1200);			}											}											arrange_athletes();	}				//#include "lmc_tween.as"// _global._rtl = this;// _quality = "BEST";	*/// FILLLLLLLLLLER ///// THE BEGINS DAPTH MANEGEMANT FOR UNIVARS		private function checkDepthLoop(nd:Number):Number {		trace("checkDepthLoop("+nd+")");		var avail:Boolean = false;	var b:Boolean = false;	var pd:Number = nd;		while(avail==false){				avail = true;		for(var i:Number = 0; i<usedDepths.length; i++){						if(pd==usedDepths[i]){				avail = false;			}		}				if(avail==false){			pd++;		}else{						trace("we think pd: "+pd+" is free");		}	}	usedDepths.push(pd);		var ad:Number = pd;	return ad;}private function checkDepth(nd:Number):Number {	trace("checkDepth("+nd+")");		var ad:Number = checkDepthLoop(nd);	//if(avail){			//}else{		// resolve			//}	/*	while(!k){		var j:Number = Math.ceil(Math.random()*3);		if(j==2){			k = true;			trace("BROKED");		}else{			trace("NO: "+j);		}	}	*/	return ad;}function getAvailableDepth(d:Number):Number {		var nd:Number = d*300;		nd = checkDepth(nd);		return nd;}// END DEPTH MENGEGAMENT FOR UNIVARSprivate function attachMessage(_mc:MovieClip, hit_mc:MovieClip){		trace("attachMessage");	MESSAGE_OPEN = true;		//var win:MovieClip = this._parent[aname].dot.attachMovie("_info_window_2", "window", 100);	MESSAGE_MC = view.attachMovie("_info_window_2", "window", 62300);	MESSAGE_MC.cacheAsBitmap = true;		MESSAGE_MC.onEnterFrame = function(){				this._x = _mc._x; 		this._y = _mc._y;				updateAfterEvent();	};		MESSAGE_INT = setInterval(Delegate.create(this, checkOverMessage,_mc), 10); 						var content_mc:MovieClip = MESSAGE_MC.content_mc.maskedContent_mc; 	var window_mc:MovieClip = MESSAGE_MC.window_mc;                     //temp buttons      //  initWindow_btn.onRelease = function() {        //    awin.initWindow(300,200,0);      //  };        var wind:Number = _mc._parent._xmouse > 0 ? 1 : 0;        MESSAGE_MC.initWindow(300,175,wind);                //win._xscale = win._yscale = 100*(100/_mc._xscale);                // Round "Connect" Button        var round_btn:MovieClip = content_mc.attachMovie("butEmpty", "round_btn", 403);        // t, w, h, cr, x, y     	     	//var but_text : String = _data.copy.universe.athletemessage.button2;     	var but_text = "GET CONNECTED";        round_btn.updateButton(but_text,0,0,8,15,142);			round_btn.onRelease =  Delegate.create( this, function(){				this._fireEvent( new BasicEvent( USOC_EventList.CHANGE_LOCATION, ["galaxy,connect",_mc.dot.data])); 						});						// Round "Browse" Button       var browse_btn:MovieClip = content_mc.attachMovie("butEmpty", "browse_btn", 404);					browse_btn.onRelease  =  Delegate.create( this, 				_fireEvent, new BasicEvent( USOC_EventList.CHANGE_LOCATION, ["galaxy,athlete",_mc.dot.data]) );													window_mc.onRollOver = Delegate.create(this, function(){				trace("window_mc roll");				delete hit_mc.onRollOut;			});			     	var browse_text = "SEE MY CHAIN";        browse_btn.updateButton(browse_text, 0, 0, 8, 148, 142);		var d = _mc.dot.data; 				var ath_name:String = d.firstname+" "+d.lastname; 		content_mc.body_txt._y = 43; 		content_mc.body_txt.text = d.message;					content_mc.name_txt.text = ath_name;				content_mc.network_txt._y = 112; 		content_mc.network_txt.text = d.network+" fans connected\n"+d.supporters+" total supporters"; //ath_name+" has "+d.network+" fans connected and "+d.supporters+" total supporters."; 						content_mc.location_txt.text = d.location;		content_mc.sport_txt.text = d.team;										window_mc.gradient_mc.gotoAndStop(2);		var sports_bg:MovieClip = content_mc.sport_holder.attachMovie("_sports_bgs","sports",10);		sports_bg._alpha = 25;		sports_bg.gotoAndStop(d.sid);						}private function removeMessage(_mc){		closeAthlete(_mc);		trace("removeMessage");	delete MESSAGE_MC.onEnterFrame;	MESSAGE_MC.removeMovieClip();		//hit_mc.onRollOut();		MESSAGE_OPEN = false;}private function closeAthlete(_mc){			trace("Close Athhlete");				var a:MovieClip = _mc; // athlete					var aname:String = a._name;			var u:MovieClip = view; // universe						var td:Number = 0.375;						a.swapDepths(a.odepth);			a.alphaTo(a.oscale,td,"easeOutSine");			a.scaleTo(a.oscale,td,"easeOutBack");			a.tween("usescale", a.oscale, td, "easeOutSine");						a.athlete_gxy_masked.alphaTo(75,td,"easeOutSine");						u.bg[aname].swapDepths(a.odepth);						// callback attached here for symmetry			u.bg[aname].alphaTo(50,td,"easeOutSine",0,				function(){					// cheapo remove window					var win:MovieClip = this._parent[aname].dot.createEmptyMovieClip("window",100);				}			);						u.bg[aname].scaleTo(a.oscale,td,"easeOutBack");					//	this.window.hideAthlete();	}private function checkOverMessage(_mc){		var mousePoint:Object = new Object();	mousePoint.x = view._xmouse;	mousePoint.y = view._ymouse;		view.localToGlobal(mousePoint);		var message_hit = MESSAGE_MC.hitTest(	mousePoint.x, mousePoint.y, true);	var athlete_hit = _mc.dot.hit_mc.hitTest(	mousePoint.x, mousePoint.y, true);		// trace("message_hit:"+message_hit+"athlete_hit:"+athlete_hit+"_mc:"+_mc._x+" view._xmouse:"+view._xmouse);		if(!message_hit && !athlete_hit){		removeMessage(_mc);		clearInterval(MESSAGE_INT);	}	}public function populate():Void {			var mc:MovieClip = view; 		_data = USOC_Site_Model.getData();	athletes_data = USOC_Site_Model.getData().athlete;  	var n:Number = athletes_data.length;		var rows:Number = 5;	var cols:Number = Math.ceil(n/rows);	trace(rows+"/"+cols);		var x_increment:Number = 400; //280	var x_stagger:Number = x_increment/2;	var x_offset:Number = -1 * cols/2 * x_increment; //-300;		var y_increment:Number = x_increment/2.5;	var y_offset:Number = -1 * (rows/2 * y_increment); // 90		mc.x_offset = x_offset;	mc.x_increment= x_increment;	mc.y_offset = y_offset;	mc.cols = cols;	mc.athletes = n;			//var z_offset:Number = 70;	//var z_increment:Number = 8; // 6.5;		var cx:Number = x_offset;	var cy:Number = y_offset;	var cr:Number = 0;	var cc:Number = 0;		var uni_bg:MovieClip = mc.createEmptyMovieClip("bg",7);	//var uni_blu:MovieClip = mc.createEmptyMovieClip("blu",9);		// hiding white aureoli	uni_bg._visible = false;		var depth_quantizer:Number = 1; // depths will be multiples of this in range		var net_base:Number = 75;		var largest_network = _data.nodes.maxnetsize;		var net_increment:Number = 20;	var net_steps:Number = 14;		for(var i:Number = 0; i<n; i++){				var stagger:Number = cr%2==0 ? 0 : x_stagger;				var ascale:Number = 0;				if(stagger==0){ // odd rows			ascale = depth_quantizer*Math.round(40/depth_quantizer+Math.random()*35/depth_quantizer);		}else{ // even rows			ascale = depth_quantizer*Math.round(50/depth_quantizer+Math.random()*40/depth_quantizer);		}				var adepth = getAvailableDepth(ascale);						var ath:MovieClip = mc.attachMovie("_athlete","a_"+i,adepth);		ath._alpha = 0; 		trace("attachAthlete:"+ath._name+"athletes_data[i].aid:"+athletes_data[i].aid+" adepth:"+adepth);					//ath.cacheAsBitmap = true;			ath.alphaTo(100, .5, "linear", (random(20)+4));				//ath.athlete_gxy_masked._visible = false;		//ath.athlete_gxy_masked._alpha = 0;				ath._x = ath.x = ath.tx = x_offset+cc*x_increment+stagger+(x_increment/10-Math.random()*x_increment/5);		ath._y = ath.y = ath.ty = y_offset+cr*y_increment+(y_increment/10-Math.random()*y_increment/5);				var ath_bg:MovieClip = uni_bg.attachMovie("_athlete_gxy","a_"+i,adepth,{_visible:false});		//var ath_blu:MovieClip = uni_blu.attachMovie("_athlete_gxy_masked","a_"+i,adepth,{_visible:false});				var ath_blu:MovieClip = ath.athlete_gxy_masked;				ath._xscale = ath._yscale = 			ath.usescale = ath.oscale = 				ath_bg._xscale = ath_bg._yscale = ascale;		//ath_blu._xscale = ath_blu._yscale = ascale;						//ath_bg._visible = false;		//ath_bg.colorTo(0xffffff,0);				new Color(ath_bg).setRGB(0xffffff); 						ath_bg._alpha = 50;		ath_bg._x = ath._x;		ath_bg._y = ath._y;		ath_bg._visible = true;						ath.odepth = adepth;				ath._alpha = ath.usescale;				var ath_network = athletes_data[i].network; 		var num 		= ath_network/largest_network;				// set network size for each athlete		var netsize:Number =  350 - (net_base + net_increment*num*net_steps); //80+Math.random()*260; // 80-320		//ath.athete_gxy_mask._xscale = ath.athete_gxy_mask._yscale = 80+Math.random()*260;						trace("athletes_data[i].netowrk:"+athletes_data[i].network+" largest_network:" +largest_network);										ath_blu.athlete_gxy_mask._xscale = ath_blu.athlete_gxy_mask._yscale = netsize; // max 350 - min 75				trace("NETSIZE33: "+netsize);		// 275		// largest_network		// min = 75 - max = 350				ath_blu._alpha = 75; //ath.usescale*0.75; //		//ath_blu._x = ath._x;		//ath_blu._y = ath._y;		ath_blu._visible = true;				ath.cacheAsBitmap =		ath_bg.cacheAsBitmap = true;		//ath_blu.cacheAsBitmap = true;				//ath.usescale = 100;		ath.stagger = stagger;		/*		ath.onEnterFrame = function(){			_rtl.moduleFloat(this);		}		*/		var picnum:Number = i%57;				ath.dot.pic_holder._xscale = ath.dot.pic_holder._yscale = 54;				var inner_mc:MovieClip = ath.dot.pic_holder.createEmptyMovieClip("inner",10);					var mcl:MovieClipLoader = new MovieClipLoader();		mcl.addListener({			onLoadInit: function(target:MovieClip){				target.forceSmoothing = true;			}		});				mcl.loadClip("./athletes/athlete_"+athletes_data[i].aid+".jpg", inner_mc);				//ath.dot.pic_holder.loadMovie("./athletes/athlete_"+athletes_data[i].aid+".jpg");										var scope = this; 				var b_1_mc = ath.dot.window.window_mc.b1;						ath.dot.data = athletes_data[i]; 				ath.dot.hit_mc.onRollOver = function(){									var scope = scope; 			if(!scope.MESSAGE_OPEN && !scope.LOCKED){							scope.attachMessage(this._parent._parent, this);								trace("onRollOver:");								var a:MovieClip = this._parent._parent; // athlete				var aname:String = a._name;				var u:MovieClip = scope.view; // universe								var d:Number = u._xmouse > 0 ? 1 : -1;				var td:Number = 0.5;				var tscale:Number = 130;								a.swapDepths(30300);				a.alphaTo(100,td,"easeOutSine");				a.scaleTo(tscale,td,"easeOutBack");								a.tween("usescale", 100, td, "easeOutSine");				a.athlete_gxy_masked.alphaTo(100,td,"easeOutSine");								u.bg[aname].swapDepths(30300);								// the callback is tied to this as the longer transition				u.bg[aname].alphaTo(100,td*1.25,"easeOutSine",0);				u.bg[aname].scaleTo(tscale,td,"easeOutBack");							}								};						/*ath.dot.hit_mc.onRollOut =  function(){						//scope.removeMessage();						var a:MovieClip = this._parent._parent; // athlete			var aname:String = a._name;			var u:MovieClip = scope.view; // universe						var td:Number = 0.375;						a.swapDepths(a.odepth);			a.alphaTo(a.oscale,td,"easeOutSine");			a.scaleTo(a.oscale,td,"easeOutBack");			a.tween("usescale", a.oscale, td, "easeOutSine");						a.athlete_gxy_masked.alphaTo(75,td,"easeOutSine");						u.bg[aname].swapDepths(a.odepth);						// callback attached here for symmetry			u.bg[aname].alphaTo(50,td,"easeOutSine",0,				function(){					// cheapo remove window					var win:MovieClip = this._parent[aname].dot.createEmptyMovieClip("window",100);				}			);						u.bg[aname].scaleTo(a.oscale,td,"easeOutBack");						this.window.hideAthlete();									//u.blu[aname].swapDepths(a.odepth);			//u.blu[aname].alphaTo(a.oscale*0.75,1.5,"easeOutSine");			//u.blu[aname].scaleTo(a.oscale,1,"easeOutBack");		};*/					var scope = this;		ath.dot.hit_mc.onRelease =  	//Delegate.create( this, 		function(){		if(!scope.LOCKED){			trace("this._parent.data.aid:"+this._parent.data.aid+" i:"+scope.i);		  scope._fireEvent(new BasicEvent( USOC_EventList.CHANGE_LOCATION, ["galaxy,athlete",this._parent.data]) );			//_fireEvent, new BasicEvent( USOC_EventList.CHANGE_LOCATION, ["galaxy,athlete",athletes_data[i]]) );		}	};				cc++;				if(cc==cols){			cc = 0;			cr++;		}				var scope = this; 				/*mc.onEnterFrame = function(): Void {			scope.floatUniverse(this);			updateAfterEvent();		};*/								}			this._fireEvent(	new BasicEvent( USOC_EventList.SET_LOCATION, 			["universe", 			Delegate.create(this,activateUniverse),  			Delegate.create(this,removeUniverse)] ) );			}private function startUniverseFloat(){				var scope = this; 		view.onEnterFrame = function(): Void {			scope.floatUniverse(this);			updateAfterEvent();		};}private function stopUniverseFloat(){				var scope = this; 		delete view.onEnterFrame;}private function activateAthlete(d){	trace("activateAthlete");}private function removeAthlete(){	trace("removeAthlete");}private function b1_click(_mc){	trace("click b");	}private function b1_over(_mc){	trace("over b");	//_mc.gotoAndStop(2);}private function b1_out(_mc){	trace("out b");	//_mc.gotoAndStop(1);}/* // obsoletefunction addRing(mc:MovieClip, num:Number, rad:Number, iscale:Number){		if(mc.rings==undefined){		mc.rings = 1;	}else{		mc.rings++;	}		var r:MovieClip = mc.createEmptyMovieClip("ring_"+mc.rings,900+mc.rings);	for(var i:Number = 0; i<num; i++){		var rd:MovieClip = r.createEmptyMovieClip("rd_"+i,10+i);		rd._rotation = (360/num) * i;		var rdd:MovieClip = rd.attachMovie("_circle","d",10);		rdd._x = rad;		rdd._xscale = rdd._yscale = iscale;	}}*/function floatUniverse(mc:MovieClip):Void {		var cols:Number = parseInt(mc.cols);	var athletes:Number = parseInt(mc.athletes);	var x_offset:Number = parseInt(mc.x_offset);		var speed:Number = modSpeed;		var rxmouse:Number = view._parent._xmouse;	var rymouse:Number = view._parent._ymouse;		var minxmouse:Number = -1*((Stage.width-900)/2);	var maxxmouse:Number = 900+-1*minxmouse;		var minymouse:Number = 1;	var maxymouse:Number = Stage.height;		// resets reading to center for off-stage mouse	rxmouse = rxmouse < minxmouse ? minxmouse : (rxmouse > maxxmouse ? maxxmouse : rxmouse);	rymouse = rymouse < minymouse ? minymouse : (rymouse > maxymouse ? maxymouse : rymouse);			var refx:Number = rxmouse; // Math.min(rxmouse, hoverModuleX*2);	var refy:Number = rymouse;		var mouseFromCenter:Number = rxmouse - hoverModuleX;		// this is clumsy	if(Math.abs(mouseFromCenter)<100){		mouseFromCenter = 0;	}else{		if(mouseFromCenter>0){			mouseFromCenter -= 100;		}else{			mouseFromCenter += 100;		}	}		var xoff:Number = -(refx - hoverModuleX);	var yoff:Number = -(refy - hoverModuleY);		//trace(mouseFromCenter+" : "+xoff);				for(var i:Number = 0; i<=athletes; i++){		var amc:MovieClip = mc["a_"+i];		var amc_bg:MovieClip = mc.bg["a_"+i];		//var amc_blu:MovieClip = mc.blu["a_"+i];		//amc._x += 2;												// old float stuff (y, now)						var mcFromCenter:Number = amc.x - hoverModuleX;			var mcFromOrigin:Number = amc._x - amc.x;						var smod:Number = 35+(parseFloat(amc.usescale)-35)*4; // deepens the nominally flat response range				//var dfx:Number = (smod)/(500+Math.abs(mouseFromCenter));		var dfy:Number = (smod)/1000; // vertical float limited more				//var centerx:Number = amc.x;//+(_rtl.hoverModuleX-hoverModuleX);		var centery:Number = amc.y;//+(_rtl.hoverModuleY-hoverModuleY);				//var altcenterx:Number = mc.x + Math.max(hoverModuleX*1.5, Math.abs(3*(mc.x - hoverModuleX))) * ((mc.x-hoverModuleX)>0?1:-1);		//var altcentery:Number = mc.y + Math.max(hoverModuleY*2, Math.abs(3*(mc.y - hoverModuleY))) * ((mc.y-hoverModuleY)>0?1:-1);				//var dirx:Number = altcenterx > 0 ? 1 : -1;		//var diry:Number = altcentery > 0 ? 1 : -1;				//var diffx:Number = dirx*hoverModuleX - altcenterx;		//var diffy:Number = diry*hoverModuleY - altcentery;				//altcenterx += diffx*1.5;		//altcentery += diffy*1.5;				//var rx:Number = _global._rtl.someModuleSelected ? altcenterx : centerx;		var ry:Number = centery ;				//if(Math.abs(mouseFromCenter)>1){ // change to 50			var dxs:Number = -mouseFromCenter/75*(amc.usescale/100);						var dfx:Number = (smod)/(500+Math.abs(mouseFromCenter));			var dx:Number = (dfx*1);//-amc._x;			//trace(amc+": "+dx);			amc.tx+=dx;						//amc.txo  = amc.txn;			//amc.txn += dxs;						//var dxd:Number = amc.txn-amc.txo;						amc._x += dxs;									amc_bg._x = amc._x;			//amc_blu._x = amc._x;						//if(amc._x>parseInt(mc.x_offset)+parseInt(mc.x_increment)*parseInt(mc.cols)-mc._x+parseInt(amc.stagger)){								//amc._x -= parseInt(mc.x_offset)+(parseInt(mc.x_increment)*parseInt(mc.cols))+mc._x-parseInt(amc.stagger);			//}else if(amc._x<parseInt(mc.x_offset)+mc._x+parseInt(amc.stagger)){				//amc._x += parseInt(mc.x_offset)+(parseInt(mc.x_increment)*parseInt(mc.cols))+mc._x-parseInt(amc.stagger);			//}						if(amc._x>(parseInt(mc.x_increment)*parseInt(mc.cols)*amc.usescale/100)/2){				amc._x -= parseInt(mc.x_increment)*parseInt(mc.cols)*(amc.usescale/100);				amc_bg._x =  amc._x;				amc._alpha = amc.usescale;				//amc_blu._x = amc._x;			}else if(amc._x<-(parseInt(mc.x_increment)*parseInt(mc.cols)*amc.usescale/100)/2){				amc._x += parseInt(mc.x_increment)*parseInt(mc.cols)*(amc.usescale/100);				amc._alpha = amc.usescale;				amc_bg._x =  amc._x;				//amc_blu._x = amc._x;			}					//}						//var dx:Number = (rx + dfx*xoff)-amc._x;		var dy:Number = (ry + dfy*yoff)-amc._y;								//if((mc._x>800&&mouseFromCenter<-300)||(mc._x<200&&mouseFromCenter>300)){			//speed*=0.125;		//}				//speed /= mcFromOrigin/10 > 1 ? mcFromOrigin/10 : 1;				//var vx:Number = amc._x+dx*speed; // + 		var vy:Number = amc._y+dy*speed; 						//amc._x = vx;		amc._y = vy;		amc_bg._y = amc._y; 		//amc_blu._y = amc._y;					}	}// var uni:MovieClip = this.createEmptyMovieClip("universe_mc",100);// uni._x = 500;// uni._y = 300;// at low numbers (57), the x-increment needs to go up to prevent pop-in/out at small scales// initUniverse(uni, 100); // 55 - 200	// FILLLLLER //						/*private function arrange_athletes(){				var rows : Number = 3; 		var row_height : Number = 125; 		var column_width : Number = 145; 				var row_count : Number = 1; 		var column_count : Number = 1; 				var total : Number = athletes_data.length; 				for (var i : Number = 0; i < total; i++) {						var this_mc = view["athlete_"+i+"_mc"];						this_mc._x = column_width 	* column_count; 			this_mc._y = row_height 	* row_count ; 							row_count++;			if(row_count > rows ) { 				row_count = 1 ; 				column_count++ ;			}						// Update Athletes data with galaxy MC 			var data1:Object = {key:i, galaxy_mc:this_mc}; 			_fireEvent(new BasicEvent( USOC_EventList.SET_GALAXY_MC, data1) );						var data2 = new Array("universe,athlete", athletes_data[i]);						this_mc.onRelease = Delegate.create( this, 				_fireEvent, new BasicEvent( USOC_EventList.CHANGE_LOCATION, data2) );										delete column_count;		delete row_height;		delete column_width;			}}*/			public function activateUniverse(){		trace("ACTIVATEuniverse");		view._visible = true; 					lockAll(false);					USOC_Galaxy_View( MovieClipHelper.getMovieClipHelper( USOC_ViewList.VIEW_GALAXY ) ).view._visible = false;				startUniverseFloat();				/*var base = USOC_Location_View.getBaseLiveLocation();				if(base != "universe"){			var t = .5; 			var tw1 = new Tween(view, "_yscale", Quad.easeOut, view._yscale, 100, t, true);			var tw2 = new Tween(view, "_xscale", Quad.easeOut, view._xscale, 100, t, true);			var tw3 = new Tween(view, "_alpha", Quad.easeOut, view._alpha, 100, t, true);						tw3.onMotionFinished = Delegate.create( this, 				_fireEvent, new BasicEvent( USOC_EventList.LOCATION_ON_ARRIVED, ["universe"]) );		}*/			}
	public function removeUniverse(){		// 			_global._r.clearGalaxy();				this._fireEvent(new BasicEvent( USOC_EventList.LOCATION_ON_DEPARTED, ["universe"]) );				stopUniverseFloat();				lockAll(true);				/*	var base = USOC_Location_View.getBaseLiveLocation();			trace("removeUniverse:"+base);					if(base != "universe"){			var t = .5; 			var tw1 = new Tween(view, "_yscale", Quad.easeOut, view._yscale, 110, t, true);			var tw2 = new Tween(view, "_xscale", Quad.easeOut, view._xscale, 110, t, true);			var tw3 = new Tween(view, "_alpha", Quad.easeOut, view._alpha, 0, t, true);						tw3.onMotionFinished = Delegate.create( this, 				_fireEvent, new BasicEvent( USOC_EventList.LOCATION_ON_DEPARTED, ["universe"]) );		}*/							}		public function lockAll(bool:Boolean){		trace("Universe lockAll:"+bool);		LOCKED = bool;	}			private function _fireEvent( e : IEvent ) : Void {        USOC_EventBroadcaster.getInstance().broadcastEvent( e );    }		}