/** * @author k */import flash.display.BitmapData;import gs.TweenLite;class com.continuityny.courtyard.views.CYHomey extends MovieClip {		private var imageURLS:Array = new Array();	private var imageOutter:MovieClip;	private var imageInner:MovieClip;	private var imageHolder:MovieClip;	private var imageLoader:MovieClipLoader;	private var bandHolder:MovieClip;	private var currentNum:Number = 0;	private var imageWidth:Number = 900;	private var imageHeight:Number = 350;			private var bitmaps:Array=new Array();	private var colors:Array=new Array(0x5F8437,0xB0CF61,0x5F8437,0xffffff);	private var allMasks:Array;	private var allBackgrounds:Array;	private var allBands:Array;		private var defaultImageURLS:Array= new Array(											'images/new/lobby.png',																															'images/new/fitness.png',																																	'images/new/market.png',																																	'images/new/room.png',																						'images/new/biz.png'																					);																									// backgrounds		private var LobbyImage:MovieClip;	private var MarketImage:MovieClip;	private var RoomImage:MovieClip;	private var BusinessImage:MovieClip;	private var FitnessImage:MovieClip;		// masks	private var LobbyMask:MovieClip;	private var MarketMask:MovieClip;	private var RoomMask:MovieClip;	private var BusinessMask:MovieClip;	private var FitnessMask:MovieClip;		// color bands		private var Band0:MovieClip;	private var Band1:MovieClip;	private var Band2:MovieClip;	private var Band3:MovieClip;					public function CYHomey(container,images) {		container.__proto__ = this.__proto__;		container.__constructor__ = CYHomey;		this = container;						if(images){			imageURLS=images;			trace(' - image urls were supplied. thank you.');		}else{			imageURLS = defaultImageURLS;			trace(' - no image urls were supplied. defaults will be used.');		}		trace('======================================================\r');				allBackgrounds = new Array(LobbyImage,MarketImage,RoomImage,BusinessImage,FitnessImage);		allMasks = new Array(LobbyMask,MarketMask,RoomMask,BusinessMask,FitnessMask);		allBands = new Array(Band0,Band1,Band2,Band3);		init();	}			private function init():Void{		loadImages();	}				private function loadImages():Void{		trace('loading images...\r');		imageLoader = new MovieClipLoader();		imageLoader.addListener(this);		loadNextImage();		}	private function loadNextImage():Void{		imageHolder = createEmptyMovieClip('imageOutter', 0);		imageLoader.loadClip(imageURLS[currentNum],imageHolder);		trace('loading image: '+imageURLS[currentNum]);		currentNum++;	}	private function onLoadInit():Void{	//	trace(' - image loaded.');		var bmp:BitmapData=new BitmapData(imageHolder._width, imageHolder._height, true, 0x00000000);		bmp.draw(imageHolder);		bitmaps.push(bmp);	//	trace(' - bitmap data stored: '+bmp);		if(currentNum<imageURLS.length){	//		trace(' - keep loading...');			loadNextImage();		}else{			trace('all images loaded.');			//	trace(bitmaps);			delete imageLoader;			imageHolder.removeMovieClip();			build();		}	}			private function build():Void{		for(var i in allBackgrounds){			allBackgrounds[i] = this.createEmptyMovieClip('BG'+i,this.getNextHighestDepth());			var bgHolder:MovieClip = allBackgrounds[i].createEmptyMovieClip('img',0);			with(bgHolder){				beginBitmapFill(bitmaps[i],new Matrix(),false,true);				moveTo(0,0);				lineTo(imageWidth,0);				lineTo(imageWidth,imageHeight);				lineTo(0,imageHeight);				endFill();			}							allMasks[i] = this.createEmptyMovieClip('MASK'+i,this.getNextHighestDepth());			allMasks[i].moveT(0,0);			allMasks[i].beginFill(0xffffff);			allMasks[i].lineTo(0,0);			allMasks[i].lineTo(100,0);			allMasks[i].lineTo(100,imageHeight);			allMasks[i].lineTo(0,imageHeight);			allMasks[i].endFill();						allBackgrounds[i].setMask(allMasks[i]);								}		bandHolder = this.createEmptyMovieClip('bHolder',this.getNextHighestDepth());		for(var k=0; k<allBands.length;k++){			makeBand(allBands[k],k);		}		idleAnimation();	}	private function idleAnimation():Void{		for(var i in allMasks){			setupPane(allMasks[i]);			allMasks[i]._x = randX();			allMasks[i]._width = randWidth();		}	}	private function setupPane(targ:MovieClip):Void{		var p:MovieClip = targ;		var t:Number = randTime();		var x:Number = randX();		//trace('move: '+p+' to: '+x+' in '+t+' secs.');		// start motion		TweenLite.to(p,t,{_x:x,_width:randWidth(),onComplete:keepMoving,onCompleteParams:[p],onCompleteScope:this});	}	private function makeBand(targ:MovieClip,num:Number):Void{				targ = bandHolder.createEmptyMovieClip('band_'+num,num);		var w = randBandWidth();		trace(targ)		with(targ){			beginFill(colors[num],50);			moveTo(0,0);			lineTo( w,0);			lineTo( w,imageHeight);			lineTo(0,imageHeight);			endFill();		}		targ._x=randX();		targ._width = randBandWidth();		setupPane(targ);	}	private function keepMoving(targ:MovieClip):Void{		var p:MovieClip = targ;		var t:Number = randTime();		var x:Number = randX();		//trace('move: '+p+' to: '+x+' in '+t+' secs.');		TweenLite.to(p,t,{_x:x,_width:randWidth(),onComplete:keepMoving,onCompleteParams:[p],onCompleteScope:this});	}	private function randX():Number {		return Math.round(Math.random()*800);	}	private function randTime():Number{		return (Math.round(Math.random()*10))+5;	}	private function randWidth():Number{		return (Math.round(Math.random()*150))+15;	}	private function randBandWidth():Number{		return (Math.round(Math.random()*15))+5;	}					}