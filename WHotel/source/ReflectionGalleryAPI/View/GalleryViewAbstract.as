package ReflectionGalleryAPI.View {import flash.display.MovieClip;import flash.events.*;import flash.text.*;import fl.transitions.*;import fl.transitions.easing.*;	import ReflectionGalleryAPI.Events.*import ReflectionGalleryAPI.Model.GalleryModelAbstract;		/** * @author andrehines */public class GalleryViewAbstract extends MovieClip{		protected var __theModel:GalleryModelAbstract;	protected var __theSectionLinkFont:String;	protected var __imageStartingX:int;    protected var __imageStartingY:int;    protected var __sectionLinkSpacing:int = 10;    protected var __descriptionTB:TextField;    protected var __descriptionHolder:MovieClip;    protected var __descriptionOffset:int;    protected var __descriptionWidth:int;    protected var __connectMC:MovieClip;    protected var __connectCornerRadius:int;    protected var __theDecoratee:GalleryViewAbstract;    protected var __linksMC:MovieClip;    protected var __linksTM:TransitionManager;    protected var __connectTM:TransitionManager;    protected var __descriptionTM:TransitionManager;        public var nextBtn:MovieClip;    public var prevBtn:MovieClip;    public var zoomBtn:MovieClip;		function GalleryViewAbstract(theDecoratee:GalleryViewAbstract = null){		trace("GalleryViewAbstract class instantiated");				if(theDecoratee != null){			__theDecoratee = theDecoratee;		}else{			trace("WARNING: No decorator passed to the View");		}	}		//handles beginning the setup of the view	public function setup():void{	}		//sets up the listeners	protected function setupListeners():void{	}		//sets up the number links for each image	protected function setupLinks():void{	}		//creates a link with a textbox inside it	protected function createLink(theInt:int, currentSectionType:String):MovieClip{		return null;		}		//sets up the next, prev, fullscreen buttons	protected function setupBtns():void{		}		// sets up the TextField that will handle displaying the descriptions of the sections	protected function setupDescriptionBox():void{	}		// changes the description TextField to display the models current description	protected function changeDescription():void{	}		// connects the index clicked with the description box, by drawing a line	protected function connectDescription():void{	}		// reveals the description	protected function revealDescription():void{	}		// reveals the connect	public function revealConnect():void{	}		// clears all links to up state	protected function clearLinks():void{	}		// reveals links	protected function revealLinks():void{	}		/////////////////////////////////////// EVENTS ////////////////////////////////////////////	public function onInfoChanged(eventObj:GalleryEvent):void{	}		//handles when a section link is clicked	public function onLinkClicked(eventObj:MouseEvent):void{	}		//handles when a NEXT section link is clicked	public function onNextClicked(eventObj:MouseEvent):void{	}		//handles when a PREV section link is clicked	public function onPrevClicked(eventObj:MouseEvent):void{	}		//handles when a ZOOM section link is clicked	public function onZoomClicked(eventObj:MouseEvent):void{	}		// handles when the description is revealed and the Transition is done	public function onConnectRevealed(eventObj:Event):void{	}		// handles when a link is rolled over	public function onLinkRolledOver(eventObj:MouseEvent):void{	}		// handles when a link is rolled out	public function onLinkRolledOut(eventObj:Object):void{	}			////////////////////////////////////getters and setters /////////////////////////////////		public function set theModel(theObj:GalleryModelAbstract):void{		this.__theModel = theObj;	}		public function get theModel():GalleryModelAbstract{		return this.__theModel;	}		public function set theSectionLinkFont(theString:String):void{		this.__theSectionLinkFont = theString;		}		public function set imageStartingX(theInt:int):void{		this.__imageStartingX = theInt;	}		public function set imageStartingY(theInt:int):void{		this.__imageStartingY = theInt;	}		public function set descriptionOffset(theInt:int):void{		this.__descriptionOffset = theInt;		}		public function set descriptionWidth(theInt:int):void{		this.__descriptionWidth = theInt;		}		public function set connectCornerRadius(theInt:int):void{		this.__connectCornerRadius = theInt;		}}}