import com.bourre.commands.Delegate;/** * @author gregpymm */class com.continuityny.mc.MultiLoader {				private var _MCL : MovieClipLoader ;	private var _LISTENER_ARRAY : Array ;	private var _LOADED_ARRAY 	: Array ; 	private var _PROGRESS_ARRAY : Array ; 		private var OVERALL_BYTES : Number = 0;	private var PROGRESS_INT : Number ;	private var onAllLoaded : Function ; 	private var reportProgress : Function ; 	private var _listener : Object ; 		public function MultiLoader(src_array:Array, target_array:Array, callback:Function, onprogress:Function) {							onAllLoaded 		= callback ; 			reportProgress		= onprogress ; 						_MCL 				= new MovieClipLoader();			_LISTENER_ARRAY 	= new Array();			_LOADED_ARRAY 		= new Array();						_PROGRESS_ARRAY 	= new Array();												 _listener = new Object();								//_LISTENER_ARRAY.push(_listener);								_MCL.addListener(_listener);								var scope = this; 								_listener.onLoadProgress = function(	target_mc:MovieClip, 														bytesLoaded:Number, 														bytesTotal:Number):Void {																									if(!target_mc.inited){						scope.OVERALL_BYTES = scope.OVERALL_BYTES + bytesTotal;						target_mc.inited = true; 					}										var diff = bytesTotal - bytesLoaded; 					trace("progress:bytesTotal:"+bytesTotal+" bytesLoaded:"+bytesLoaded+" diff:"+diff+" this.i:"+target_mc._name);					scope._PROGRESS_ARRAY[target_mc._name] = Number(bytesLoaded);									}								_listener.onLoadInit = Delegate.create(this, function(){										//trace("Load Complete: _mc"+	_mc);						scope._LOADED_ARRAY[this.i] = true; 					// onLoaded();									});															for(var i=0; i< src_array.length; i++){					//_LISTENER.onLoadProgress = Delegate.create(this, onProgress);								_MCL.loadClip(src_array[i], target_array[i]);									trace("MultiLoader ***  src_array[i]:"+src_array[i]+" target:"+target_array[i]);															} // end for									showProgress();									}			private function showProgress(){						trace("show progress");				PROGRESS_INT = setInterval(Delegate.create(this, function(){						var total_progress:Number = totalProgress(); 						trace("Overall:"+OVERALL_BYTES+" Progress Total:"+total_progress);						if( total_progress >= OVERALL_BYTES && (OVERALL_BYTES!= 0) ){				clearInterval(PROGRESS_INT);				trace("all loaded"); 				onAllLoaded();			}									var perc : Number = Math.ceil(total_progress / OVERALL_BYTES * 100 ); 								reportProgress(perc);					}), 25);							}			private function totalProgress():Number{		trace("totalProgress:"+_PROGRESS_ARRAY.length);		var tote:Number = 0;						for (var each : String in  _PROGRESS_ARRAY) {			tote = tote + _PROGRESS_ARRAY[each];			trace("_PROGRESS_ARRAY[each]:"+each+" : "+_PROGRESS_ARRAY[each]);		}				trace("tote:"+tote);		return tote;			}		}