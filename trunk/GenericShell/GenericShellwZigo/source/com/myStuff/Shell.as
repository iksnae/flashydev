// Generic Shell - for all "multi-dimension" applicatiohs (multiple components working in unison to create effects;//  	cooper s - december 2007//// our architecture to create a controllable and flexible // means of laoding and manipulating movie clips to create any// possible application anybody can think of. ////// first our responding to and event standard  import mx.utils.Delegate;   // for when we want to broadcast events to mulitple components in the shell   import com.myStuff.Broadcaster;  //to allow our preloader to be used for any and every load  import com.myStuff.AssetLoader;  // and our universal transition handler to make it all look good.  import com.mosesSupposes.fuse.*;  class com.myStuff.Shell extends MovieClip {	     // symbol id for the preloader animated graphic.    static public var preloaderID:String = "Preloader";	 public var holderMC:MovieClip;	 private var preLoader:MovieClip;	 private var mainClip:MovieClip;	 	 function Shell () {		init();	}	private function init() {		trace (" init 1" );				ZigoEngine.register(PennerEasing);				Stage.scaleMode = "noscale";		Stage.align = "TL";				var b:Broadcaster = Broadcaster.getInstance();		b.addEventListener("link",this,"linkEvent");		b.addEventListener("click",this,"clickEvent");		loadMain();	}		public function loadMain():Void {					var al:AssetLoader;	al = new AssetLoader();	preLoader = _level0.attachMovie(preloaderID,"pLoader",100,{_x:450,_y:200});	al.addEventListener("complete",Delegate.create(this,mainLoaded));	mainClip = _level0.createEmptyMovieClip("mainClip",4);	al.load(mainClip,"main.swf");	mainClip._alpha = 0;		}		  public function linkEvent( event:Object ) : Void    	{		trace("Shell:link event triggered: "+ _root.holderMC.myLogo );		_root.holderMC.myLogo._alpha = 50;    	}		public function mainLoaded() {		trace("main loaded");		preLoader._visible = false;		trace("preloader is nix...");		ZigoEngine.doTween(_level0.mainClip,'_alpha,_xscale,_yscale',100,60,'easeOutBack');	}	 static public function main() : Void {	var shell:Shell = new Shell();    }  }