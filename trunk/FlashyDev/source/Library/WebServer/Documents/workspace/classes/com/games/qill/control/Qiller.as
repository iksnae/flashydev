package com.games.qill.control{	import flash.display.MovieClip;	import flash.events.*;	public class Qiller extends MovieClip {		static const RIGHT = 37;		static const LEFT = 39;		static const UP = 38;		static const DOWN = 36;		static const SPACE = 36;		static const KEYZ = 36;		static const KEYX = 36;		static const KEYC = 36;		static const KEYV = 36;		private var __KEYPRESS_RIGHT:Boolean;		private var __KEYPRESS_LEFT:Boolean;		private var __KEYPRESS_UP:Boolean;		private var __KEYPRESS_DOWN:Boolean;		private var __KEYPRESS_SPACE:Boolean;		private var __KEYPRESS_A:Boolean;		private var __KEYPRESS_S:Boolean;		private var __KEYPRESS_D:Boolean;		private var __KEYPRESS_F:Boolean;		private var __JUMPING:Boolean;		private var __HORIZ_INCRE:int=0;		private var __VERTI_INCRE:int=0;		private var __HERO:MovieClip;		private var __SPEED:Number = 0;		private var __DISTANCE_TRAVELED:Number;		private var __nextpos:Number;		private var __SLAY_COUNT:Number;		private var __MAXSTRENGTH:Number = 10;		private var __MAXSPEED:Number = 10;		private var __HALFSPEED:Number = __MAXSPEED/2;		public function Qiller() {			addEventListener(Event.ENTER_FRAME, run);			stage.addEventListener(KeyboardEvent.KEY_DOWN,keyDownListener);			stage.addEventListener(KeyboardEvent.KEY_UP,keyUpListener);			HERO.__nextpos=0;		}		public function run(e:Event):void {			moveObjectsInMemory();			render();		}		public function keyDownListener(e:KeyboardEvent):void {			switch (e.keyCode) {				case LEFT :					__KEYPRESS_LEFT=true;					break;				case RIGHT :					__KEYPRESS_RIGHT=true;					break;				case UP :					__KEYPRESS_UP=true;					break;				case DOWN :					__KEYPRESS_DOWN=false;					break;			}		}		public function keyUpListener(e:KeyboardEvent):void {			switch (e.keyCode) {				case LEFT :					__KEYPRESS_LEFT = false;					break;				case RIGHT :					__KEYPRESS_RIGHT = false;					break;				case UP :					__KEYPRESS_UP = false;					break;				case DOWN :					__KEYPRESS_DOWN = false;					break;			}		}		public function moveObjectsInMemory() {			if (__KEYPRESS_LEFT) {				HERO.nextx = HERO.x+__MAXSPEED;			}		}		public function render() {			HERO.x=HERO.nextx;		}	}}